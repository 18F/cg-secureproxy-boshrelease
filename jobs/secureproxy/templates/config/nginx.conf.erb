# deployment cloudcontroller nginx.conf
user  vcap vcap;
worker_processes  2;

error_log /var/vcap/sys/log/secureproxy/nginx.error.log;
pid       /var/vcap/sys/run/secureproxy/secureproxy.pid;

worker_rlimit_nofile 40000;

events {
  worker_connections  8096;
  multi_accept        on;
  use                 epoll;
}

http {

  ##
  # Basic stuff
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 1200;
  types_hash_max_size 2048;
  server_tokens off;

  include /var/vcap/packages/nginx/conf/mime.types;
  default_type application/octet-stream;
  types {
    text/plain log;
    text/plain asc;
  }

  ##
  # Logging
  ##

  log_format  main  '$remote_addr - [$time_local] "$request" '
            '$status $body_bytes_sent "$http_referer" '
            '"$http_user_agent" $request_time '
            '$upstream_response_time $pipe';

  access_log /var/vcap/sys/log/secureproxy/access.log main;
  error_log /var/vcap/sys/log/secureproxy/error.log;

  ##
  # Gzip
  ##

  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_types  text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/rss+xml;


  ##
  # Timeout variables (currently disabled)
  ##

  # client_header_timeout   10m;
  client_body_timeout 10m;
  # send_timeout        10m;
  client_max_body_size 1024m;

  # connection_pool_size        256;
  # client_header_buffer_size   16k;
  # large_client_header_buffers 4 32k;
  # request_pool_size       16k;

  # Add map for websockets
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Add secure header values if not set upstream, else add headers with the
  # implicit default value of empty string, which is ignored by the `add_header`
  # directive.
  map $upstream_http_strict_transport_security $sts {
    '' max-age=31536000;
  }
  map $upstream_http_x_frame_options $frame_options {
    '' DENY;
  }
  map $upstream_http_x_content_type_options $content_type_options {
    '' nosniff;
  }
  map $upstream_http_x_xss_protection $xss_protection {
    '' '1; mode=block';
  }
  map $upstream_http_content_type $default_content_type {
    '' 'text/plain; charset=utf-8';
  }

  server {
    listen    <%= p("secureproxy.listen_port") %>;
    server_name  _;

    # proxy all traffic
    location / {

      # redirect all http traffic to https
      if ($http_x_forwarded_proto = http) {
        return 301 https://$host$request_uri;
      }

      ##
      # Security
      ##

      add_header Strict-Transport-Security $sts always;
      add_header X-Frame-Options $frame_options always;
      add_header X-Content-Type-Options $content_type_options always;
      add_header X-XSS-Protection $xss_protection always;
      add_header Content-Type $default_content_type always;

      fastcgi_param               HTTP_PROXY "";

      proxy_buffering             off;
      proxy_http_version          1.1;
      proxy_set_header            Upgrade $http_upgrade;
      proxy_set_header            Connection $connection_upgrade;
      proxy_set_header            Host $host;
      proxy_set_header            Proxy "";
      proxy_redirect              off;
      proxy_pass_request_headers  on;
      proxy_connect_timeout       10;
      proxy_read_timeout          600;
      proxy_pass                  http://localhost:<%= p("secureproxy.proxy_port") %>;

    }

  }
}
